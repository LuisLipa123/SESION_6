import java.util.Scanner;

// Interfaz Stack
interface Stack<E> {
    void push(E x);
    E pop() throws ExceptionIsEmpty;
    E top() throws ExceptionIsEmpty;
    boolean isEmpty();
}

// Excepción personalizada
class ExceptionIsEmpty extends Exception {
    public ExceptionIsEmpty(String message) {
        super(message);
    }
}

// Implementación Stack con arreglo
class StackArray<E> implements Stack<E> {
    private E[] array;
    private int tope;

    @SuppressWarnings("unchecked")
    public StackArray(int n) {
        this.array = (E[]) new Object[n];
        tope = -1;
    }

    public void push(E x) {
        if (isFull()) {
            System.out.println("La pila está llena. No se puede insertar.");
            return;
        }
        array[++tope] = x;
    }

    public E pop() throws ExceptionIsEmpty {
        if (isEmpty()) {
            throw new ExceptionIsEmpty("La pila está vacía.");
        }
        return array[tope--];
    }

    public E top() throws ExceptionIsEmpty {
        if (isEmpty()) {
            throw new ExceptionIsEmpty("La pila está vacía.");
        }
        return array[tope];
    }

    public boolean isEmpty() {
        return tope == -1;
    }

    public boolean isFull() {
        return tope == array.length - 1;
    }

    public String toString() {
        StringBuilder sb = new StringBuilder();
        sb.append("Pila: [");
        for (int i = tope; i >= 0; i--) {
            sb.append(array[i]);
            if (i > 0) sb.append(", ");
        }
        sb.append("]");
        return sb.toString();
    }
}

// Clase principal para pruebas
public class Actividad1{
    public static void main(String[] args) {
        Scanner scanner = new Scanner(System.in);

        try {
            System.out.print("¿Cuántos enteros desea apilar? ");
            int nEnteros = scanner.nextInt();
            Stack<Integer> pilaEnteros = new StackArray<>(nEnteros);
            for (int i = 0; i < nEnteros; i++) {
                System.out.print("Ingrese entero #" + (i + 1) + ": ");
                int valor = scanner.nextInt();
                pilaEnteros.push(valor);
            }

            System.out.println(pilaEnteros);
            if (!pilaEnteros.isEmpty()) {
                System.out.println("Elemento en el tope: " + pilaEnteros.top());
                System.out.println("Elemento removido: " + pilaEnteros.pop());
                System.out.println(pilaEnteros);
            }

            System.out.print("\n Cuantas cadenas desea apilar? ");
            int nCadenas = scanner.nextInt();
            scanner.nextLine(); // Limpiar salto de línea
            Stack<String> pilaCadenas = new StackArray<>(nCadenas);
            for (int i = 0; i < nCadenas; i++) {
                System.out.print("Ingrese cadena #" + (i + 1) + ": ");
                String cadena = scanner.nextLine();
                pilaCadenas.push(cadena);
            }

            System.out.println(pilaCadenas);

        } catch (ExceptionIsEmpty e) {
            System.out.println("Error: " + e.getMessage());
        }

        scanner.close();
    }
}
